
@{
  ViewBag.Title = "Your Life Interview";
}


<div class="row interviewerheader" style="background:transparent url('@Url.Content("~/images/Background_Header.png")') no-repeat 0% 0% / 100% auto;">
  <div class="col-md-3">
    <div class="centeredcontent">
      <img src="@Url.Content("~/Images/TurnOnCamera.png")">
    </div>
  </div>
  @*<div class="col-md-2">
      <div class="vertcontent">
        <span>Turn On Camera</span>
      </div>
    </div>*@
  <div class="col-md-3">
    <div class="centeredcontent">
      <img src="@Url.Content("~/Images/ConnectCamera.png")">
    </div>
  </div>
  @*<div class="col-md-2">
      <div class="vertcontent" style="margin-left: -2%">
        <span>Connect</span>
      </div>
    </div>*@
  <div class="col-md-6"></div>
</div>
<div class="interviewerbody">
  <div class="row interviewerrow" style="margin-top:40px">
    <div class="col-md-12">
      <span style="color: #363636; letter-spacing: .6px; font-size: 24px">Interviewer</span>
    </div>
  </div>

  <div class="row interviewerrow">
    <div class="col-md-12">
      <hr align="left" class="simpledivider" />
    </div>
  </div>

  <div class="row interviewerrow" style="margin-top:25px">
    <div class="col-md-4 col-sm-12 col-xs-12">
      <span style="color: #ffa800; letter-spacing: .45px; font-size: 18px">Questions</span>
      <img src=@Url.Content("~/Images/LargeIndicator.gif") id="topicLoadingImage" />
      <div id="accordionoverflow">
        <div class="accordion" id="questionAccordion">

        </div>
      </div>
    </div>
    <div class="col-md-4 col-sm-12 col-xs-12">
      <div><span style="color: #ffa800; letter-spacing: .45px; font-size: 18px">Review</span></div>
      <div style="margin-top: 15px">
        <span id="questionShown"></span>
      </div>
      <div class="player" id="divRecorder">

      </div>

      <div id="recorderButtonContainer">
        <div id="recordButton" class="enabledRecordButton">
          <div style="height: 16px; color: rgb(255, 255, 255); letter-spacing: 0.66px; font-size: 13px; margin-left: 20%; width:80%">Answer/</div>
          <div style="height: 16px; color: rgb(255, 255, 255); letter-spacing: 0.66px; font-size: 13px; margin-left: 22%; width:78%">Record</div>
        </div>
        <div id="stopButton" class="enabledStopButton">
          <div style="height: 16px; color: rgb(255, 255, 255); letter-spacing: 0.66px; font-size: 13px; margin-top: calc(.5rem); margin-left: 30%; width:70%">Stop</div>
        </div>
        <div id="reviewButton" class="enabledReviewButton">
          <div style="height: 16px; color: rgb(255, 255, 255); letter-spacing: 0.66px; font-size: 13px; margin-top: calc(.5rem); margin-left: 25%; width:75%">Review</div>
        </div>
        <div id="redoButton" class="enabledRedoButton">
          <div style="height: 16px; color: rgb(255, 255, 255); letter-spacing: 0.66px; font-size: 13px; margin-left: 30%; width:70%">Redo/</div>
          <div style="height: 16px; color: rgb(255, 255, 255); letter-spacing: 0.66px; font-size: 13px; margin-left: 25%; width:75%">Record</div>
        </div>
        <div id="postButton" class="enabledPostButton">
          <div style="height: 16px; color: rgb(255, 255, 255); letter-spacing: 0.66px; font-size: 13px; margin-top: calc(.5rem); margin-left: 30%; width:70%">Post</div>
        </div>
      </div>
      <div id="relatedPhotosHeaderContainer">
        <div id="reloadedPhotosHeaderLabel">
          Related Photos
        </div>
        <div id="uploadPhotoButton" class="uploader" style="float: left; margin-left: 30px; cursor:pointer">
          <img src="@Url.Content("~/Images/uploadbutton.png")">
        </div>
      </div>
      <div id="relatedPhotosContainer">
        <img src="@Url.Content("~/Images/samplephoto1.png")">
        <img src="@Url.Content("~/Images/samplephoto2.png")">
        <img src="@Url.Content("~/Images/samplephoto3.png")">
        <img src="@Url.Content("~/Images/samplephoto4.png")">
        <img src="@Url.Content("~/Images/samplephoto5.png")">
      </div>

      <div id="relatedVideosHeaderContainer">
        <div id="reloadedVideosHeaderLabel">
          Related Videos
        </div>
        <div id="uploadVideoButton" class="uploader" style="float: left; margin-left: 30px; cursor:pointer">
          <img src="@Url.Content("~/Images/uploadbutton.png")">
        </div>
      </div>
      <div id="relatedVideosContainer">
        <img src="@Url.Content("~/Images/samplevideo1.png")">
        <img src="@Url.Content("~/Images/samplevideo2.png")">
        <img src="@Url.Content("~/Images/samplevideo3.png")">
      </div>

    </div>
    <div class="col-md-4 col-sm-12 col-xs-12">
      <div><span style="color: #ffa800; letter-spacing: .45px; font-size: 18px">Interview</span></div>
      <div style="margin-top: 15px">
        <span style="letter-spacing: .8px; font-size: 16px; font-weight:500">Topics > <strong><span id="topicName"></span></strong></span>
      </div>
      <div id="interviewRecordingsContainer">

      </div>
    </div>
  </div>

</div>

<audio src="@Url.Content("~/Questions/E01.mp3")" id="questionAudio" type="audio/mp3" onended="AudioComplete()">
  <p>
    Your browser does not support the <code>audio</code> element.
  </p>
</audio>

<input type="hidden" id="defaultQuestionPath" value="@Url.Content("~/Questions/default.mp3")" />
<input type="hidden" id="defaultPlayQuestion" value="@Url.Content("~/Images/sm_play_icon.png")" />
<input type="hidden" id="defaultPauseQuestion" value="@Url.Content("~/Images/sm_pause_icon.png")" />

@section Scripts
{

  <script>

    var $videos;
    var $topics;
    var $currentQuestionId = 0;
    var $currentTopicId = 0;
    var isFlashReady = false;
    var isCamReady = false;
    var userHasCam = false;
    var reviewButtonEnabled = false;
    var responseButtonEnabled = false;
    var stopButtonEnabled = false;
    var currentStream = "";
    var currentLocation = "";
    var currentVideo = "";

    var pipeParams = { size: { width: 480, height: 360 }, qualityurl: "avq/480p.xml", accountHash: "3a607b4a17256a0676680aca650548be", eid: "A9hIFB", mrt: 3600, asv: 0 };

    //function onCamAccess(recorderId, allowed) {
    //  if (allowed) {
    //    isCamReady = true;
    //  } else {
    //    isCamReady = false;
    //  }
    //}

    function onCamAccess(allowed, recorderId) {
      if (allowed) {
        isCamReady = true;
      } else {
        isCamReady = false;
      }
    }

    function userHasCamMic(cam_number, mic_number, recorderId) {
      userHasCam = ((cam_number > 0) && (mic_number > 0));
    }

    function onSaveOk(streamName, streamDuration, userId, cameraName, micName, recorderId, audioCodec, videoCodec, fileType, videoId, audioOnly, location)
    {
      var args = Array.prototype.slice.call(arguments);
      currentLocation = args[11];
      currentStream = args[0];
      currentVideo = args[9];

      var postUrl = "@Url.Content("~/Interview/SaveVideo")";
      $.post(postUrl, { location: currentLocation, hash: "@ViewBag.AccountHash", stream: currentStream, video: currentVideo, questionId: $currentQuestionId, duration:args[1] }, function(data) {
        var returnData = data;
        if (returnData == "success") {
                  //do something
        } else {
                  //display the error
          alert("Error: " + returnData);
        }
                //Refresh the accordion to show the answered question
        RefreshAccordion();
                //RefreshPlaybackVideos();
      });

      //114203 - videoId : args [9]
      //vs1470782010630_483 - streamName : args[0]
      //<video poster="https://<location>/<hash>/<stream>.jpg" width="400" height="300" controls><source src="https://<location>/<hash>/<stream>.mp4" type="video/mp4">Your browser does not support the video tag.</video>

    }

    function DisableAllButtons() {
      $("#recordButton").addClass("disabledRecordButton").removeClass("enabledRecordButton");
      $("#stopButton").addClass("disabledStopButton").removeClass("enabledStopButton");
      $("#redoButton").addClass("disabledRedoButton").removeClass("enabledRedoButton");
      $("#postButton").addClass("disabledPostButton").removeClass("enabledPostButton");
      $("#reviewButton").addClass("disabledReviewButton").removeClass("enabledReviewButton");
    }


    function EnableInitialButtons() {
      $("#recordButton").addClass("enabledRecordButton").removeClass("disabledRecordButton");
      $("#stopButton").addClass("disabledStopButton").removeClass("enabledStopButton");
      $("#reviewButton").addClass("disabledReviewButton").removeClass("enabledReviewButton");
      $("#redoButton").addClass("disabledReviewButton").removeClass("enabledReviewButton");
      $("#postButton").addClass("disabledPostButton").removeClass("enabledPostButton");
    }

    function AudioComplete() {
      $("img.imgquestion").attr("src", $("#defaultPlayQuestion").val());
    }

    function GetQuestionAudioLocationFromId() {
      for (var iTopic = 0; iTopic < $topics.length; iTopic++) {
        for (var iQuestion = 0; iQuestion < $topics[iTopic].TopicQuestions.length; iQuestion++) {
          if ($topics[iTopic].TopicQuestions[iQuestion].QuestionId == $currentQuestionId) {
            return $topics[iTopic].TopicQuestions[iQuestion].QuestionAudioLocation;
          }
        }
      }
      return "";
    }

    function QuestionIsAnswered() {
      for (var iTopic = 0; iTopic < $topics.length; iTopic++) {
        for (var iQuestion = 0; iQuestion < $topics[iTopic].TopicQuestions.length; iQuestion++) {
          if ($topics[iTopic].TopicQuestions[iQuestion].QuestionId == $currentQuestionId) {
            return $topics[iTopic].TopicQuestions[iQuestion].IsAnswered;
          }
        }
      }
      return false;
    }

    function GetQuestionTextFromId() {
      for (var iTopic = 0; iTopic < $topics.length; iTopic++) {
        for (var iQuestion = 0; iQuestion < $topics[iTopic].TopicQuestions.length; iQuestion++) {
          if ($topics[iTopic].TopicQuestions[iQuestion].QuestionId == $currentQuestionId) {
            return $topics[iTopic].TopicQuestions[iQuestion].QuestionText;
          }
        }
      }
      return "";
    }

    function SelectQuestion() {
      $("span.question").removeClass("selectedQuestion");
      $("span.recordedTime").removeClass("selectedQuestion");
      $("div.card-item").addClass("unselectedCardItem").removeClass("selectedCardItem");
      var accordionTopicSelector = "question" + $currentQuestionId;
      $("#" + accordionTopicSelector).find("span.question").addClass("selectedQuestion");
      $("#" + accordionTopicSelector).find("span.recordedTime").addClass("selectedQuestion");
      $("#" + accordionTopicSelector).addClass("selectedCardItem").removeClass("unselectedCardItem");
      var questionText = GetQuestionTextFromId();
      var questionFormattedText = "Question <strong>" +
        GetQuestionTextFromId() +
        "</strong>";
      $("#questionShown").html(questionFormattedText);
      $("#questionShown").attr("title", questionText);
      EnableInitialButtons();
      //if (QuestionIsAnswered()) {
      //  EnableButtonsForAnsweredQuestion();
      //} else {
      //  EnableButtonsForUnansweredQuestion();
      //}
    }

    function GetInterviewQuestions(topicId, questionId) {
      var postUrl = "@Url.Content("~/Interview/GetUserVideos")";
      $.post(postUrl, { topicId: topicId, questionId: questionId }, function(data) {
        if (data.length > 0) {
          BuildInterviewSection(jQuery.parseJSON(data));
        }
      });
    }

    function BuildInterviewSection(InterviewQuestions)
    {
      //<img src="https://eu1-addpipe.s3.eu-central-1.amazonaws.com/3a607b4a17256a0676680aca650548be/1bdb381f4c5a20af312fe319a61021f2.jpg" location="eu1-addpipe.s3.eu-central-1.amazonaws.com" hash="3a607b4a17256a0676680aca650548be" stream="1bdb381f4c5a20af312fe319a61021f2" class="clip" data-toggle="tooltip" data-placement="top" title="What is your earliest childhood memory?">
      var interviewHtml = "";
      for (var iInterview = 0; iInterview < InterviewQuestions.length; iInterview++) {
        var thumbnailUrl = "https://";
            thumbnailUrl += InterviewQuestions[iInterview].Location;
            thumbnailUrl += "/";
            thumbnailUrl += InterviewQuestions[iInterview].AccountHash;
            thumbnailUrl += "/";
            thumbnailUrl += InterviewQuestions[iInterview].Stream;
            thumbnailUrl += ".jpg";

        interviewHtml += "<div class=\"topicContainer\">";
        interviewHtml += "<div class=\"videoThumbnailHolder\">";
        interviewHtml += "<img class=\"videothumbnailimage\" src=\"" + thumbnailUrl + "\" style=\"height:116px;width:175px\">";
        interviewHtml += "<div class=\"overlaytext\">";
        interviewHtml += InterviewQuestions[iInterview].RecordedTime;
        interviewHtml += "</div>";
        if (iInterview == 0) {
        interviewHtml += "<div class=\"overlaylatest\">";
          interviewHtml += "Latest";
        interviewHtml += "</div>";
        }
        interviewHtml += "</div>";
        interviewHtml += "<div class=\"videodescriptionholder\">";
        interviewHtml += "<div class=\"topictext\">";
        interviewHtml += InterviewQuestions[iInterview].Question;
        interviewHtml += "</div>";
        interviewHtml += "<div class=\"topictiming\">";
        interviewHtml += InterviewQuestions[iInterview].LastModifiedText;
        interviewHtml += "</div>";
        interviewHtml += "</div>";
        interviewHtml += "</div>";
      }
      $("#interviewRecordingsContainer").html(interviewHtml);
    }

    function BuildAccordion() {
      var allTopics = "";
      var cardHtml =
        "<div class=\"card\" style=\"border:currentColor; border-image: none; background-color: rgb(238, 236, 236);\">";
      for (var iTopic = 0; iTopic < $topics.length; iTopic++) {
        var headingId = "heading" + $topics[iTopic].TopicId;
        var collapseId = "collapse" + $topics[iTopic].TopicId;
        allTopics += cardHtml;
        allTopics += "<div class=\"card-header\" id=\"" +
          headingId +
            "\" style=\"padding: 0px 0.5rem 0.25rem; border-radius: calc(.5rem - 1px); margin-bottom: 5px;\">";
        allTopics += "<h2 class=\"mb-0\">";
        allTopics += "<button class=\"btn collapsed accordionbutton\" type=\"button\" data-toggle=\"collapse\" data-target=\"#" + collapseId + "\" aria-expanded=\"false\" aria-controls=\"" + collapseId + "\" style=\"box-shadow: none\">";
        allTopics += "<div>Section " + iTopic + " <strong>" + $topics[iTopic].TopicName + "</strong></div>";
        allTopics += "<div><strong>" + $topics[iTopic].AnsweredCount + "/" + $topics[iTopic].QuestionCount + "</strong></div>";
        allTopics += "</button>";
        allTopics += "</h2>";
        allTopics += "</div>";

        allTopics += "<div id=\"" + collapseId + "\" class=\"collapse\" aria-labelledby=\"" + headingId + "\" data-parent=\"#questionAccordion\">";
        allTopics += "<div class=\"card-body\" style=\"padding:0px\">";

        for (var iQuestion = 0; iQuestion < $topics[iTopic].TopicQuestions.length; iQuestion++) {
          var questionId = "question" + $topics[iTopic].TopicQuestions[iQuestion].QuestionId;
          allTopics += "<div class=\"card-item unselectedCardItem\" id=\"" +
            questionId +
            "\" style=\"cursor: pointer; border-radius: calc(.5rem - 1px); width: 100%; padding-right: 10px; padding-left: 10px; display: inline-block; font-size: .9em\">";
          allTopics += "<div class=\"playquestion\" style=\"width: auto\">";
          allTopics += "<img class=\"imgquestion\" src=\"@Url.Content("~/Images/sm_play_icon.png")\" style=\"margin-bottom:3px\">";
          allTopics += "</div>";
          allTopics += "<div style=\"width: 75%; padding-left: 5px\">";
          allTopics += "<span class=\"question\" title=\"" + $topics[iTopic].TopicQuestions[iQuestion].QuestionText + "\">" + $topics[iTopic].TopicQuestions[iQuestion].QuestionText + "</span>";
          allTopics += "</div>";
          allTopics += "<div style=\"width:10%\">";
          allTopics += "<span class=\"recordedTime\" style=\"float:right\">" + $topics[iTopic].TopicQuestions[iQuestion].RecordedTime + "</spran>";
          allTopics += "</div>";
          allTopics += "<div style=\"margin-left: 5px; margin-top: 2px; width:auto\">";
          if ($topics[iTopic].TopicQuestions[iQuestion].IsAnswered) {
            allTopics += "<img src=\"@Url.Content("~/Images/check.png")\" style=\"float:right\">";
          } else {
            allTopics += "<img src=\"@Url.Content("~/Images/checkbox_empty.png")\" style=\"float:right\">";
          }
          allTopics += "</div>";
          allTopics += "</div>";
        }

        allTopics += "</div>";
        allTopics += "</div>";

        allTopics += "</div>";

      }
      $("#questionAccordion").html(allTopics);

      $('.collapse').on('shown.bs.collapse',
        function () {
          $currentTopicId = parseInt($(this)[0].id.replace("collapse", ""));
          //topicName
          GetInterviewQuestions($currentTopicId, 0);
          $(this).parent().addClass('active');
          $(this).parent().find("button").addClass('activeaccordionbutton');
        });

      $('.collapse').on('hidden.bs.collapse',
        function() {
          $(this).parent().removeClass('active');
          $(this).parent().find("button").removeClass('activeaccordionbutton');
        });

      $(".card-item").click(function ()
      {
        $currentQuestionId = parseInt($(this)[0].id.replace("question", ""));
        //topicName
        GetInterviewQuestions(0, $currentQuestionId);
        SelectQuestion();
      });

      $(".playquestion").click(function ()
      {
        $currentQuestionId = parseInt($(this).parent()[0].id.replace("question", ""));

        if ($(this).find("img.imgquestion").attr("src") == $("#defaultPauseQuestion").val()) {
          //Just pause it
          document.getElementById('questionAudio').pause();
          $(this).find("img.imgquestion").attr("src", $("#defaultPlayQuestion").val());
        }
        else
        {
          var questionAudioLocation = GetQuestionAudioLocationFromId();
        if (questionAudioLocation.length) {
          var newAudioPath = $("#defaultQuestionPath").val().replace("default.mp3", questionAudioLocation);
          $("#questionAudio").attr("src", newAudioPath);
          document.getElementById('questionAudio').volume = 1;
          document.getElementById('questionAudio').play();

          $("img.imgquestion").attr("src", $("#defaultPlayQuestion").val());
          $(this).find("img.imgquestion").attr("src", $("#defaultPauseQuestion").val());

          }
        }
      });
    }

    function RefreshAccordion() {
      var getTopicsUrl = "@Url.Content("~/Interview/GetUserTopicsAndQuestions")";
      $.get(getTopicsUrl,
        { "_": $.now() },
        function(data) {
          $("#topicLoadingImage").hide();
          if (data.length > 0) {
            $topics = jQuery.parseJSON(data);
            BuildAccordion(data);
          }
        });
    }

    $(function () {

      DisableAllButtons();
      RefreshAccordion();

      PipeSDK.insert("divRecorder", pipeParams, function (recorderObject)
      {

        recorderObject.userHasCamMic = function(id,camNr, micNr){
          var args = Array.prototype.slice.call(arguments);
          userHasCam = ((camNr > 0) && (micNr > 0));
	      }

        recorderObject.onCamAccess = function(id, allowed){
		      var args = Array.prototype.slice.call(arguments);
          if (allowed) {
            isCamReady = true;
          } else {
            isCamReady = false;
          }
	      }


        recorderObject.onSaveOk = function (recorderId, streamName, streamDuration, cameraName, micName, audioCodec, videoCodec, filetype, videoId, audioOnly, location) {
          var args = Array.prototype.slice.call(arguments);
          currentLocation = args[10];
          currentStream = args[1];
          currentVideo = args[8];

          var postUrl = "@Url.Content("~/Interview/SaveVideo")";
          $.post(postUrl, { location: currentLocation, hash: "@ViewBag.AccountHash", stream: currentStream, video: currentVideo, questionId: $currentQuestionId, duration:args[2] }, function (data) {
            var returnData = data;
            if (returnData == "success") {
              //do something
            } else {
              //display the error
              alert("Error: " + returnData);
            }
            //Refresh the accordion to show the answered question
            RefreshAccordion();
            //RefreshPlaybackVideos();
          });
        }

        recorderObject.onReadyToRecord()
        {

          $("#recordButton").click(function ()
          {
            if ($(this).hasClass("enabledRecordButton"))
            {

              if (!isCamReady) {
                alert(
                  "Your recording device is not ready. Please click on the \"Record Video\" image and allow access to your camera & microphone if necessary");
                return;
              }

              if (!userHasCam) {
                alert("The system could not detect a camera and microphone on your device.");
                return;
              }

                if ($currentQuestionId > 0) {
                  if (typeof recorderObject.record === "function") {
                    recorderObject.record();
                  }
                  else {
                    document.VideoRecorder.record();
                  }

                //enable the stop button, disable the record/review/redo/post buttons
                $("#recordButton").addClass("disabledRecordButton").removeClass("enabledRecordButton");
                $("#stopButton").addClass("enabledStopButton").removeClass("disabledStopButton");
                $("#reviewButton").addClass("disabledReviewButton").removeClass("enabledReviewButton");
                $("#redoButton").addClass("disabledRedoButton").removeClass("enabledRedoButton");
                $("#postButton").addClass("disabledPostButton").removeClass("enabledPostButton");
              } else {
                alert("Please select a topic and question before recording.");
              }
            }
          });

          $("#stopButton").click(function ()
          {
            if ($(this).hasClass("enabledStopButton")) {
              if (typeof recorderObject.stopVideo === "function") {
                recorderObject.stopVideo();
              }
              else {
                document.VideoRecorder.stopVideo();
              }

              //disable the stop button, enable the review/redo/post buttons
              $("#stopButton").addClass("disabledStopButton").removeClass("enabledStopButton");
              $("#reviewButton").addClass("enabledReviewButton").removeClass("disabledReviewButton");
              $("#redoButton").addClass("enabledRedoButton").removeClass("disabledRedoButton");
              $("#postButton").addClass("enabledPostButton").removeClass("disabledPostButton");
            }
          });

          $("#reviewButton").click(function () {
            if ($(this).hasClass("enabledReviewButton")) {
              if (typeof recorderObject.playVideo === "function") {
                recorderObject.playVideo();
              }
              else {
                document.VideoRecorder.playVideo();
              }

            }
          });

          $("#redoButton").click(function () {
            if ($(this).hasClass("enabledRedoButton")) {
              if ($currentQuestionId > 0) {
                  if (typeof recorderObject.record === "function") {
                    recorderObject.record();
                  }
                  else {
                    document.VideoRecorder.record();
                  }
                //enable the stop button, disable the record/redo/review/post buttons
                $("#recordButton").addClass("disabledRecordButton").removeClass("enabledRecordButton");
                $("#stopButton").addClass("enabledStopButton").removeClass("disabledStopButton");
                $("#reviewButton").addClass("enabledReviewButton").removeClass("disabledReviewButton");
                $("#redoButton").addClass("enabledRedoButton").removeClass("disabledRedoButton");
                $("#postButton").addClass("enabledPostButton").removeClass("disabledPostButton");
              } else {
                alert("Please select a topic and question before recording.");
              }
            }
          });

          $("#postButton").click(function () {
            if ($(this).hasClass("enabledPostButton")) {
              if (typeof recorderObject.save === "function") {
                recorderObject.save();
              }
              else {
                document.VideoRecorder.save();
              }
                //enable the answer button, disable the stop/review/redo/post buttons
                $("#recordButton").addClass("enabledRecordButton").removeClass("enabledRecordButton");
                $("#stopButton").addClass("disabledStopButton").removeClass("enabledRecordButton");
                $("#reviewButton").addClass("disabledReviewButton").removeClass("enabledRecordButton");
                $("#redoButton").addClass("disabledRedoButton").removeClass("enabledRecordButton");
                $("#postButton").addClass("disabledPostButton").removeClass("enabledRecordButton");
            }
          });
        }
      });
    });

    $(document).ready(function() {


      $("div.uploader").hover(function() {
          $(this).find("img").attr("src",
            function(index, attr) {
              return attr.replace(".png", "active.png");
            });
        },
        function() {
          $(this).find("img").attr("src",
            function(index, attr) {
              return attr.replace("active.png", ".png");
            });
        });


      $("#recordButton").hover(function ()
      {
        if ($(this).hasClass("enabledRecordButton")) {
          $(this).addClass('highlightRecordButton');
        }
      }, function ()
      {
        if ($(this).hasClass("enabledRecordButton")) {
          $(this).removeClass('highlightRecordButton');
          }
      });

      $("#stopButton").hover(function ()
      {
        if ($(this).hasClass("enabledStopButton")) {
          $(this).addClass('highlightStopButton');
        }
      }, function ()
      {
        if ($(this).hasClass("enabledStopButton")) {
          $(this).removeClass('highlightStopButton');
          }
      });

      $("#reviewButton").hover(function ()
      {
        if ($(this).hasClass("enabledReviewButton")) {
          $(this).addClass('highlightReviewButton');
        }
      }, function ()
      {
        if ($(this).hasClass("enabledReviewButton")) {
          $(this).removeClass('highlightReviewButton');
          }
      });

      $("#redoButton").hover(function ()
      {
        if ($(this).hasClass("enabledRedoButton")) {
          $(this).addClass('highlightRedoButton');
        }
      }, function ()
      {
        if ($(this).hasClass("enabledRedoButton")) {
          $(this).removeClass('highlightRedoButton');
          }
      });

      $("#postButton").hover(function ()
      {
        if ($(this).hasClass("enabledPostButton")) {
          $(this).addClass('highlightPostButton');
        }
      }, function ()
      {
        if ($(this).hasClass("enabledPostButton")) {
          $(this).removeClass('highlightPostButton');
          }
      });

      $("#reloadedPhotosHeaderLabel").click(function() {
        alert("Open a detailed panel showing all uploaded photos");
      });

      $("#relatedPhotosContainer").click(function() {
        alert("Open a detailed panel showing all uploaded photos");
      });

      $("#reloadedVideosHeaderLabel").click(function() {
        alert("Open a detailed panel showing all uploaded videos");
      });

      $("#relatedVideosContainer").click(function() {
        alert("Open a detailed panel showing all uploaded videos");
      });

      $("#uploadPhotoButton").click(function() {
        alert("Upload a new photo");
      });

      $("#uploadVideoButton").click(function() {
        alert("Upload a new video");
      });

      $(".topicContainer").click(function() {
        alert("This will select the topic and load the video in the player for the user to answer/review/redo/post");
      });

    });

  </script>
}